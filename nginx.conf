# Load Brotli modules (adjust paths if necessary)
load_module /etc/nginx/modules/ngx_http_brotli_filter_module.so;
load_module /etc/nginx/modules/ngx_http_brotli_static_module.so;

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include mime.types;
    default_type application/octet-stream;

    # Log Settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Brotli Compression Settings
    brotli on;
    brotli_comp_level 6;              # Moderate compression level (adjust as needed)
    brotli_min_length 256;            # Only compress responses larger than 256 bytes
    brotli_types text/plain text/css application/json application/javascript text/xml application/xml text/javascript font/eot font/ttf font/woff font/woff2 image/svg+xml;

    server {
        listen 80;
        server_name localhost;

        # Set the root directory for static assets
        root /usr/share/nginx/html;
        index index.html;

        # Serve static assets directly; if not found, proxy to SSR
        location / {
            try_files $uri $uri/ @ssr;
        }

        # Proxy dynamic SSR requests to the Node.js server
        location @ssr {
            proxy_pass http://127.0.0.1:4000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
